操作系统的细节都不太会
如操作系统的IO模型
共五种
  1. 同步阻塞IO
  2. 同步非阻塞IO
  3. 多路复用IO（细节 select, poll, epoll 的区别）
      select 和 poll原理基本相同：
        （1）注册待侦听的文件描述符（这里的文件描述符创建时最好使用非阻塞）
        （2）每次调用都去检查这些文件描述符的状态，当有一个或多个文件描述符（fd）就绪时返回
        （3）返回结果中包括已就绪和未就绪的fd
      相比select， poll解决了单个进程能够打开的文件描述符数量有限制的问题。select受限于FD_SIZE限制，如果修改则需要修改这个宏重新编译内核，而poll通过一个pollfd数组向内核传递需
      要关注事件，避开数量限制。
      select与poll共同缺陷：包含大量fd的数组被大量复制于用户态与内核态地址空间之间，开销会随fd增多而线性增大。
      epoll: 
        （1）基于事件驱动，避免每次扫描都要扫描所有fd
        （2）epoll_wait只返回就绪的fd
        （3）epoll使用nmap内存映射技术避免内存复制的开销
        （4）epoll的fd上限是操作系统最大句柄数目，一般与内存有关
  4. 消息驱动IO
  5. 异步IO
算法两道dp 凑零钱 丑数
丑数当时没想到用dp
